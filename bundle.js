(()=>{"use strict";var t={426:(t,r,n)=>{n.d(r,{Z:()=>a});var e=n(537),i=n.n(e),o=n(645),s=n.n(o)()(i());s.push([t.id,"* {\r\n  margin: 0;\r\n  padding: 0;\r\n  font: inherit;\r\n  color: inherit;\r\n}\r\n*,\r\n:after,\r\n:before {\r\n  box-sizing: border-box;\r\n  flex-shrink: 0;\r\n}\r\n:root {\r\n  -webkit-tap-highlight-color: transparent;\r\n  -webkit-text-size-adjust: 100%;\r\n  text-size-adjust: 100%;\r\n  cursor: default;\r\n  line-height: 1.5;\r\n  overflow-wrap: break-word;\r\n  word-break: break-word;\r\n  tab-size: 4;\r\n}\r\nhtml,\r\nbody {\r\n  height: 100%;\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n}\r\nimg,\r\npicture,\r\nvideo,\r\ncanvas,\r\nsvg {\r\n  display: block;\r\n  max-height: 100%;\r\n  max-width: 100%;\r\n}\r\nbutton {\r\n  border: 0;\r\n  cursor: pointer;\r\n}\r\na {\r\n  text-decoration: none;\r\n}\r\ntable {\r\n  border-collapse: collapse;\r\n  border-spacing: 0;\r\n}\r\n\r\n#canvas {\r\n  z-index: -10;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background-color: white;\r\n}\r\n\r\n#start-btn {\r\n  z-index: 10;\r\n  position: absolute;\r\n  font-size: 20px;\r\n  padding: 10px;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background-color: green;\r\n  color: white;\r\n  transition-duration: 1s;\r\n}\r\n#start-btn:hover {\r\n  padding: 60px;\r\n}\r\n\r\n#introduction {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  height: 100%;\r\n  width: 600px;\r\n  max-height: 100%;\r\n  max-width: 100%;\r\n}\r\n\r\n#infomation {\r\n  height: 50%;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  grid-template-rows: 1fr 1fr 1fr;\r\n}\r\n.info-box {\r\n  border: 1px solid rgba(0, 0, 0, 0.3);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 50px;\r\n  color: rgba(0, 0, 0, 0.3);\r\n}\r\n.info-box:first-child {\r\n  grid-column: 1 / span 3;\r\n  color: black;\r\n}\r\n.info-box:nth-child(2) {\r\n  color: blue;\r\n}\r\n.info-box:nth-child(3) {\r\n  color: rgb(0, 255, 0);\r\n}\r\n.info-box:nth-child(4) {\r\n  color: skyblue;\r\n}\r\n.info-box:nth-child(5) {\r\n  color: gold;\r\n}\r\n.info-box span {\r\n  font-size: 20px;\r\n}\r\n\r\n#controler,\r\n#control-info {\r\n  display: none;\r\n}\r\n\r\n@media screen and (max-width: 500px) {\r\n  #controler {\r\n    height: 50%;\r\n    background-color: rgba(0, 0, 0, 0.1);\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr;\r\n    grid-template-rows: 1fr 1fr 1fr;\r\n  }\r\n  .control-btn {\r\n    border: 1px solid white;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: 30px;\r\n  }\r\n}\r\n\r\n@media screen and (min-width: 501px) {\r\n  #control-info {\r\n    height: 50%;\r\n    background-color: rgba(0, 0, 0, 0.1);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n  }\r\n  .arrow-keys {\r\n    padding: 20px;\r\n    width: 50%;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr;\r\n    grid-template-rows: 1fr 1fr;\r\n    gap: 10px;\r\n  }\r\n  .arrow-key {\r\n    border: 1px solid rgba(0, 0, 0, 0.3);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: 50px;\r\n    color: rgba(0, 0, 0, 0.3);\r\n    border-radius: 10px;\r\n  }\r\n  .arrow-key:first-child {\r\n    grid-column-start: 2;\r\n    grid-column-end: 3;\r\n  }\r\n  .arrow-key:nth-child(2) {\r\n    grid-column-start: 1;\r\n  }\r\n\r\n  #space-key {\r\n    padding: 0 50px;\r\n    border: 1px solid rgba(0, 0, 0, 0.3);\r\n    font-size: 50px;\r\n    color: rgba(0, 0, 0, 0.3);\r\n    border-radius: 10px;\r\n  }\r\n}\r\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT,UAAU;EACV,aAAa;EACb,cAAc;AAChB;AACA;;;EAGE,sBAAsB;EACtB,cAAc;AAChB;AACA;EACE,wCAAwC;EACxC,8BAA8B;EAC9B,sBAAsB;EACtB,eAAe;EACf,gBAAgB;EAChB,yBAAyB;EACzB,sBAAsB;EACtB,WAAW;AACb;AACA;;EAEE,YAAY;EACZ,yBAAyB;EACzB,sBAAsB;EACtB,qBAAqB;EACrB,iBAAiB;AACnB;AACA;;;;;EAKE,cAAc;EACd,gBAAgB;EAChB,eAAe;AACjB;AACA;EACE,SAAS;EACT,eAAe;AACjB;AACA;EACE,qBAAqB;AACvB;AACA;EACE,yBAAyB;EACzB,iBAAiB;AACnB;;AAEA;EACE,YAAY;EACZ,kBAAkB;EAClB,QAAQ;EACR,SAAS;EACT,gCAAgC;EAChC,uBAAuB;AACzB;;AAEA;EACE,WAAW;EACX,kBAAkB;EAClB,eAAe;EACf,aAAa;EACb,QAAQ;EACR,SAAS;EACT,gCAAgC;EAChC,uBAAuB;EACvB,YAAY;EACZ,uBAAuB;AACzB;AACA;EACE,aAAa;AACf;;AAEA;EACE,kBAAkB;EAClB,QAAQ;EACR,SAAS;EACT,gCAAgC;EAChC,YAAY;EACZ,YAAY;EACZ,gBAAgB;EAChB,eAAe;AACjB;;AAEA;EACE,WAAW;EACX,aAAa;EACb,kCAAkC;EAClC,+BAA+B;AACjC;AACA;EACE,oCAAoC;EACpC,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;EACnB,eAAe;EACf,yBAAyB;AAC3B;AACA;EACE,uBAAuB;EACvB,YAAY;AACd;AACA;EACE,WAAW;AACb;AACA;EACE,qBAAqB;AACvB;AACA;EACE,cAAc;AAChB;AACA;EACE,WAAW;AACb;AACA;EACE,eAAe;AACjB;;AAEA;;EAEE,aAAa;AACf;;AAEA;EACE;IACE,WAAW;IACX,oCAAoC;IACpC,aAAa;IACb,kCAAkC;IAClC,+BAA+B;EACjC;EACA;IACE,uBAAuB;IACvB,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,eAAe;EACjB;AACF;;AAEA;EACE;IACE,WAAW;IACX,oCAAoC;IACpC,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,eAAe;EACjB;EACA;IACE,aAAa;IACb,UAAU;IACV,aAAa;IACb,kCAAkC;IAClC,2BAA2B;IAC3B,SAAS;EACX;EACA;IACE,oCAAoC;IACpC,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,eAAe;IACf,yBAAyB;IACzB,mBAAmB;EACrB;EACA;IACE,oBAAoB;IACpB,kBAAkB;EACpB;EACA;IACE,oBAAoB;EACtB;;EAEA;IACE,eAAe;IACf,oCAAoC;IACpC,eAAe;IACf,yBAAyB;IACzB,mBAAmB;EACrB;AACF",sourcesContent:["* {\r\n  margin: 0;\r\n  padding: 0;\r\n  font: inherit;\r\n  color: inherit;\r\n}\r\n*,\r\n:after,\r\n:before {\r\n  box-sizing: border-box;\r\n  flex-shrink: 0;\r\n}\r\n:root {\r\n  -webkit-tap-highlight-color: transparent;\r\n  -webkit-text-size-adjust: 100%;\r\n  text-size-adjust: 100%;\r\n  cursor: default;\r\n  line-height: 1.5;\r\n  overflow-wrap: break-word;\r\n  word-break: break-word;\r\n  tab-size: 4;\r\n}\r\nhtml,\r\nbody {\r\n  height: 100%;\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n}\r\nimg,\r\npicture,\r\nvideo,\r\ncanvas,\r\nsvg {\r\n  display: block;\r\n  max-height: 100%;\r\n  max-width: 100%;\r\n}\r\nbutton {\r\n  border: 0;\r\n  cursor: pointer;\r\n}\r\na {\r\n  text-decoration: none;\r\n}\r\ntable {\r\n  border-collapse: collapse;\r\n  border-spacing: 0;\r\n}\r\n\r\n#canvas {\r\n  z-index: -10;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background-color: white;\r\n}\r\n\r\n#start-btn {\r\n  z-index: 10;\r\n  position: absolute;\r\n  font-size: 20px;\r\n  padding: 10px;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background-color: green;\r\n  color: white;\r\n  transition-duration: 1s;\r\n}\r\n#start-btn:hover {\r\n  padding: 60px;\r\n}\r\n\r\n#introduction {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  height: 100%;\r\n  width: 600px;\r\n  max-height: 100%;\r\n  max-width: 100%;\r\n}\r\n\r\n#infomation {\r\n  height: 50%;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  grid-template-rows: 1fr 1fr 1fr;\r\n}\r\n.info-box {\r\n  border: 1px solid rgba(0, 0, 0, 0.3);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 50px;\r\n  color: rgba(0, 0, 0, 0.3);\r\n}\r\n.info-box:first-child {\r\n  grid-column: 1 / span 3;\r\n  color: black;\r\n}\r\n.info-box:nth-child(2) {\r\n  color: blue;\r\n}\r\n.info-box:nth-child(3) {\r\n  color: rgb(0, 255, 0);\r\n}\r\n.info-box:nth-child(4) {\r\n  color: skyblue;\r\n}\r\n.info-box:nth-child(5) {\r\n  color: gold;\r\n}\r\n.info-box span {\r\n  font-size: 20px;\r\n}\r\n\r\n#controler,\r\n#control-info {\r\n  display: none;\r\n}\r\n\r\n@media screen and (max-width: 500px) {\r\n  #controler {\r\n    height: 50%;\r\n    background-color: rgba(0, 0, 0, 0.1);\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr;\r\n    grid-template-rows: 1fr 1fr 1fr;\r\n  }\r\n  .control-btn {\r\n    border: 1px solid white;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: 30px;\r\n  }\r\n}\r\n\r\n@media screen and (min-width: 501px) {\r\n  #control-info {\r\n    height: 50%;\r\n    background-color: rgba(0, 0, 0, 0.1);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n  }\r\n  .arrow-keys {\r\n    padding: 20px;\r\n    width: 50%;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr;\r\n    grid-template-rows: 1fr 1fr;\r\n    gap: 10px;\r\n  }\r\n  .arrow-key {\r\n    border: 1px solid rgba(0, 0, 0, 0.3);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: 50px;\r\n    color: rgba(0, 0, 0, 0.3);\r\n    border-radius: 10px;\r\n  }\r\n  .arrow-key:first-child {\r\n    grid-column-start: 2;\r\n    grid-column-end: 3;\r\n  }\r\n  .arrow-key:nth-child(2) {\r\n    grid-column-start: 1;\r\n  }\r\n\r\n  #space-key {\r\n    padding: 0 50px;\r\n    border: 1px solid rgba(0, 0, 0, 0.3);\r\n    font-size: 50px;\r\n    color: rgba(0, 0, 0, 0.3);\r\n    border-radius: 10px;\r\n  }\r\n}\r\n"],sourceRoot:""}]);const a=s},645:t=>{t.exports=function(t){var r=[];return r.toString=function(){return this.map((function(r){var n="",e=void 0!==r[5];return r[4]&&(n+="@supports (".concat(r[4],") {")),r[2]&&(n+="@media ".concat(r[2]," {")),e&&(n+="@layer".concat(r[5].length>0?" ".concat(r[5]):""," {")),n+=t(r),e&&(n+="}"),r[2]&&(n+="}"),r[4]&&(n+="}"),n})).join("")},r.i=function(t,n,e,i,o){"string"==typeof t&&(t=[[null,t,void 0]]);var s={};if(e)for(var a=0;a<this.length;a++){var h=this[a][0];null!=h&&(s[h]=!0)}for(var c=0;c<t.length;c++){var A=[].concat(t[c]);e&&s[A[0]]||(void 0!==o&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=o),n&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=n):A[2]=n),i&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=i):A[4]="".concat(i)),r.push(A))}},r}},537:t=>{t.exports=function(t){var r=t[1],n=t[3];if(!n)return r;if("function"==typeof btoa){var e=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(e),o="/*# ".concat(i," */"),s=n.sources.map((function(t){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(t," */")}));return[r].concat(s).concat([o]).join("\n")}return[r].join("\n")}},379:t=>{var r=[];function n(t){for(var n=-1,e=0;e<r.length;e++)if(r[e].identifier===t){n=e;break}return n}function e(t,e){for(var o={},s=[],a=0;a<t.length;a++){var h=t[a],c=e.base?h[0]+e.base:h[0],A=o[c]||0,l="".concat(c," ").concat(A);o[c]=A+1;var d=n(l),u={css:h[1],media:h[2],sourceMap:h[3],supports:h[4],layer:h[5]};if(-1!==d)r[d].references++,r[d].updater(u);else{var p=i(u,e);e.byIndex=a,r.splice(a,0,{identifier:l,updater:p,references:1})}s.push(l)}return s}function i(t,r){var n=r.domAPI(r);return n.update(t),function(r){if(r){if(r.css===t.css&&r.media===t.media&&r.sourceMap===t.sourceMap&&r.supports===t.supports&&r.layer===t.layer)return;n.update(t=r)}else n.remove()}}t.exports=function(t,i){var o=e(t=t||[],i=i||{});return function(t){t=t||[];for(var s=0;s<o.length;s++){var a=n(o[s]);r[a].references--}for(var h=e(t,i),c=0;c<o.length;c++){var A=n(o[c]);0===r[A].references&&(r[A].updater(),r.splice(A,1))}o=h}}},569:t=>{var r={};t.exports=function(t,n){var e=function(t){if(void 0===r[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}r[t]=n}return r[t]}(t);if(!e)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");e.appendChild(n)}},216:t=>{t.exports=function(t){var r=document.createElement("style");return t.setAttributes(r,t.attributes),t.insert(r,t.options),r}},565:(t,r,n)=>{t.exports=function(t){var r=n.nc;r&&t.setAttribute("nonce",r)}},795:t=>{t.exports=function(t){var r=t.insertStyleElement(t);return{update:function(n){!function(t,r,n){var e="";n.supports&&(e+="@supports (".concat(n.supports,") {")),n.media&&(e+="@media ".concat(n.media," {"));var i=void 0!==n.layer;i&&(e+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),e+=n.css,i&&(e+="}"),n.media&&(e+="}"),n.supports&&(e+="}");var o=n.sourceMap;o&&"undefined"!=typeof btoa&&(e+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),r.styleTagTransform(e,t,r.options)}(r,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(r)}}}},589:t=>{t.exports=function(t,r){if(r.styleSheet)r.styleSheet.cssText=t;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(t))}}}},r={};function n(e){var i=r[e];if(void 0!==i)return i.exports;var o=r[e]={id:e,exports:{}};return t[e](o,o.exports,n),o.exports}n.n=t=>{var r=t&&t.__esModule?()=>t.default:()=>t;return n.d(r,{a:r}),r},n.d=(t,r)=>{for(var e in r)n.o(r,e)&&!n.o(t,e)&&Object.defineProperty(t,e,{enumerable:!0,get:r[e]})},n.o=(t,r)=>Object.prototype.hasOwnProperty.call(t,r),n.nc=void 0,(()=>{var t=n(379),r=n.n(t),e=n(795),i=n.n(e),o=n(569),s=n.n(o),a=n(565),h=n.n(a),c=n(216),A=n.n(c),l=n(589),d=n.n(l),u=n(426),p={};p.styleTagTransform=d(),p.setAttributes=h(),p.insert=s().bind(null,"head"),p.domAPI=i(),p.insertStyleElement=A(),r()(u.Z,p),u.Z&&u.Z.locals&&u.Z.locals;var f=function(t){var r,n=this;this.keys=[],this.game=t,this.touchX=0,this.touchY=0,this.touchTreshold=30,window.addEventListener("keydown",(function(t){switch(t.code){case"ArrowLeft":case"KeyA":case"ArrowRight":case"KeyD":case"ArrowUp":case"KeyW":case"ArrowDown":case"KeyS":case"Space":case"Escape":-1===n.keys.indexOf(t.code)&&n.keys.push(t.code);break;case"Enter":n.game.gameOver&&n.game.restart()}})),window.addEventListener("keyup",(function(t){switch(t.code){case"ArrowLeft":case"KeyA":case"ArrowRight":case"KeyD":case"ArrowUp":case"KeyW":case"ArrowDown":case"KeyS":case"Space":case"Escape":n.keys.splice(n.keys.indexOf(t.code),1)}})),window.addEventListener("touchstart",(function(t){n.touchX=t.changedTouches[0].clientX,n.touchY=t.changedTouches[0].clientY,n.touchX<window.innerWidth/3&&-1===n.keys.indexOf("touchLeft")?n.keys.push("touchLeft"):n.touchX>2*window.innerWidth/3&&-1===n.keys.indexOf("touchRight")?n.keys.push("touchRight"):n.keys.push("touchCenterX"),n.touchY<4*window.innerHeight/6&&-1===n.keys.indexOf("touchDown")?n.keys.push("touchUp"):n.touchY>5*window.innerHeight/6&&-1===n.keys.indexOf("touchDown")?n.keys.push("touchDown"):n.keys.push("touchCenterY"),n.game.gameOver&&(r=setTimeout((function(){n.game.restart()}),1e3))})),window.addEventListener("touchmove",(function(t){n.touchX=t.changedTouches[0].clientX,n.touchY=t.changedTouches[0].clientY,n.touchX<window.innerWidth/3&&-1===n.keys.indexOf("touchLeft")?(n.keys.splice(n.keys.indexOf("touchRight"),1),n.keys.push("touchLeft")):n.touchX>2*window.innerWidth/3&&-1===n.keys.indexOf("touchRight")&&(n.keys.splice(n.keys.indexOf("touchLeft"),1),n.keys.push("touchRight")),n.touchY<4*window.innerHeight/6&&-1===n.keys.indexOf("touchUp")?(n.keys.splice(n.keys.indexOf("touchDown"),1),n.keys.push("touchUp")):n.touchY>5*window.innerHeight/6&&-1===n.keys.indexOf("touchDown")&&(n.keys.splice(n.keys.indexOf("touchUp"),1),n.keys.push("touchDown"))})),window.addEventListener("touchend",(function(){n.keys.splice(0),clearTimeout(r)}))};const g=function(){function t(t){this.game=t,this.width=50,this.height=50,this.x=(this.game.width-50)/2,this.y=this.game.height-200,this.vx=0,this.vy=0,this.moveSpeed=10,this.HP=3}return t.prototype.update=function(t){this.x+=this.vx,t.includes("ArrowLeft")||t.includes("KeyA")||t.includes("touchLeft")?this.vx=-this.moveSpeed:t.includes("ArrowRight")||t.includes("KeyD")||t.includes("touchRight")?this.vx=this.moveSpeed:this.vx=0,this.x<0&&(this.x=0),this.x>this.game.width-this.width&&(this.x=this.game.width-this.width),this.y+=this.vy,t.includes("ArrowUp")||t.includes("KeyW")||t.includes("touchUp")?this.vy=-this.moveSpeed:t.includes("ArrowDown")||t.includes("KeyS")||t.includes("touchDown")?this.vy=this.moveSpeed:this.vy=0,this.y<this.game.height/2-this.height&&(this.y=this.game.height/2-this.height),this.y>this.game.height-this.height&&(this.y=this.game.height-this.height)},t.prototype.draw=function(t){t.fillStyle="green",t.fillRect(this.x,this.y,this.width,this.height)},t.prototype.restart=function(){this.x=(this.game.width-50)/2,this.y=this.game.height-200,this.HP=3},t}(),m=function(){function t(t,r,n,e){this.game=t,this.width=50,this.height=50,this.x=Math.random()*(this.game.width/r-this.width)+n*(this.game.width/r),this.y=0,this.speed=0,this.fallSpeed=1+e/1e4,this.overScreen=!1,this.HP=Math.ceil(e/3e3),this.color="black"}return t.prototype.update=function(){this.x+=this.speed,this.y+=this.fallSpeed,9===this.HP&&(this.color="rgb(0,0,0)"),8===this.HP&&(this.color="rgb(85,0,0)"),7===this.HP&&(this.color="rgb(170,0,0)"),6===this.HP&&(this.color="rgb(255,0,0)"),5===this.HP&&(this.color="rgb(255,0,85)"),4===this.HP&&(this.color="rgb(255,0,170)"),3===this.HP&&(this.color="rgb(255,0,255)"),2===this.HP&&(this.color="rgb(255,85,255)"),1===this.HP&&(this.color="rgb(255,170,255)"),this.y>this.game.height&&(this.overScreen=!0)},t.prototype.draw=function(t){t.fillStyle=this.color,t.fillRect(this.x,this.y,this.width,this.height)},t}();var C=function(){function t(t,r,n){this.width=10,this.height=30,this.x=t.x+(t.width-this.width)/(r+1)*(n+1),this.y=t.y,this.speed=10,this.overScreen=!1}return t.prototype.update=function(){this.y-=this.speed,this.y<0&&(this.overScreen=!0)},t.prototype.draw=function(t){t.fillStyle="rgb(0,255,0)",t.fillRect(this.x,this.y,this.width,this.height)},t}();const y=C,b=function(){function t(t,r){this.width=50,this.height=50,this.x=Math.random()*(t.width-this.width),this.y=0,this.speed=8,this.overScreen=!1,this.type=r,this.color={beamSpeed:"blue",beamCount:"rgb(0,255,0)",skill:"skyblue",life:"gold"}[this.type]}return t.prototype.update=function(){this.y+=this.speed,this.y<0&&(this.overScreen=!0)},t.prototype.draw=function(t){t.fillStyle=this.color,t.fillRect(this.x,this.y,this.width,this.height)},t}();var w=function(){function t(t,r){this.game=t,this.player=r,this.fontSize=30,this.fontFamily="san-serif",this.fontColor="green"}return t.prototype.draw=function(t){t.fillStyle=this.fontColor,t.font="".concat(this.fontSize,"px ").concat(this.fontFamily),t.lineWidth=3,t.strokeRect(0,0,this.game.width,this.game.height),t.textAlign="left",t.fillText("Score: ".concat(this.game.score),20,50),t.textAlign="left",t.fillText("♥".repeat(this.player.HP),20,90),t.textAlign="left",t.fillText("".concat(1===this.game.skill?"●":"○"),20,130),this.game.gameOver&&(this.fontColor="green",t.textAlign="center",t.fillText("Game Over",this.game.width/2,this.game.height/2),window.innerWidth>=600?t.fillText("press Enter to restart!",this.game.width/2,this.game.height/2+40):t.fillText("press Long to restart!",this.game.width/2,this.game.height/2+40))},t}();const x=w;window.addEventListener("load",(function(){var t=document.getElementById("canvas"),r=t.getContext("2d"),n=document.getElementById("start-btn"),e=document.getElementById("introduction");t.width=600,t.height=900;var i=function(){function t(t,r){this.width=t,this.height=r,this.input=new f(this),this.player=new g(this),this.UI=new x(this,this.player),this.blocks=[],this.beams=[],this.items=[],this.timer=0,this.score=0,this.blockInterval=140,this.beamInterval=50,this.difficulty=2,this.beamCount=1,this.skill=1,this.gameOver=!1}return t.prototype.update=function(){var t=this;this.timer++,this.player.update(this.input.keys),this.timer%1500==0&&(this.difficulty++,this.blockInterval-=2);for(var r=0;r<this.difficulty;r++)(this.timer+Math.round(this.blockInterval/this.difficulty)*r)%this.blockInterval==0&&this.addBlock(r);this.blocks.forEach((function(r,n,e){h(t.player,r)&&(1===t.player.HP&&(t.gameOver=!0),t.player.HP--,e.splice(n,1)),t.beams.forEach((function(i,o,s){h(r,i)&&(r.HP--,s.splice(o,1),r.HP<=0&&(e.splice(n,1),t.score++))})),r.update(),r.overScreen&&e.splice(n,1)})),this.timer%this.beamInterval==0&&this.addBeam(),this.beams.forEach((function(t,r,n){t.update(),t.overScreen&&n.splice(r,1)})),this.timer%1500==0&&this.addItem("beamSpeed"),this.timer%3e3==0&&this.addItem("life"),this.timer%4e3==0&&this.addItem("beamCount"),this.timer%6666==0&&this.addItem("skill"),this.items.forEach((function(r,n,e){if(r.update(),h(t.player,r))switch(e.splice(n,1),r.type){case"beamSpeed":t.beamInterval>20?t.beamInterval-=10:t.beamInterval>10?t.beamInterval-=2:t.beamInterval>1&&(t.beamInterval-=1);break;case"life":t.player.HP++;break;case"beamCount":t.beamCount<10&&t.beamCount++;break;case"skill":t.skill=1}r.overScreen&&e.splice(n,1)})),(this.input.keys.includes("Space")||this.input.keys.includes("touchCenterX")&&this.input.keys.includes("touchCenterY"))&&0!==this.skill&&this.uesSkill()},t.prototype.draw=function(t){this.player.draw(t),this.blocks.forEach((function(r){r.draw(t)})),this.beams.forEach((function(r){r.draw(t)})),this.items.forEach((function(r){r.draw(t)})),this.UI.draw(t)},t.prototype.addBlock=function(t){this.blocks.push(new m(this,this.difficulty,t,this.timer))},t.prototype.addBeam=function(){for(var t=0;t<this.beamCount;t++)this.beams.push(new y(this.player,this.beamCount,t))},t.prototype.addItem=function(t){this.items.push(new b(this,t))},t.prototype.uesSkill=function(){this.blocks.splice(0),this.skill--},t.prototype.restart=function(){this.player.restart(),this.blocks=[],this.beams=[],this.items=[],this.timer=0,this.score=0,this.blockInterval=140,this.beamInterval=50,this.difficulty=2,this.beamCount=1,this.skill=1,this.gameOver=!1,s(a(60))},t}(),o=new i(t.width,t.height),s=function(t){requestAnimationFrame(t)},a=function(n){var e,i,s=1e3/n;return function n(a){void 0===e&&void 0===i&&(e=window.performance.now(),i=window.performance.now());var h=a-i;h>=s&&(i=a-h%s,r.clearRect(0,0,t.width,t.height),o.update(),o.draw(r)),o.gameOver||requestAnimationFrame(n)}};function h(t,r){var n=Math.abs(t.x-r.x)<t.width&&Math.abs(t.x+t.width-(r.x+r.width))<t.width,e=Math.abs(t.y-r.y)<=t.height&&Math.abs(t.y+t.height-(r.y+r.height))<=t.height;return n&&e}n.addEventListener("click",(function(){s(a(60)),e.style.display="none",n.style.display="none",document.fullscreenElement?document.exitFullscreen():t.requestFullscreen().catch((function(t){alert("".concat(t.message))}))}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,