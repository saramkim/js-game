(()=>{"use strict";var t={426:(t,e,i)=>{i.d(e,{Z:()=>a});var r=i(537),n=i.n(r),s=i(645),o=i.n(s)()(n());o.push([t.id,"* {\r\n  margin: 0;\r\n  padding: 0;\r\n  font: inherit;\r\n  color: inherit;\r\n}\r\n*,\r\n:after,\r\n:before {\r\n  box-sizing: border-box;\r\n  flex-shrink: 0;\r\n}\r\n:root {\r\n  -webkit-tap-highlight-color: transparent;\r\n  -webkit-text-size-adjust: 100%;\r\n  text-size-adjust: 100%;\r\n  cursor: default;\r\n  line-height: 1.5;\r\n  overflow-wrap: break-word;\r\n  word-break: break-word;\r\n  tab-size: 4;\r\n}\r\nhtml,\r\nbody {\r\n  height: 100%;\r\n}\r\nimg,\r\npicture,\r\nvideo,\r\ncanvas,\r\nsvg {\r\n  display: block;\r\n  max-width: 100%;\r\n}\r\nbutton {\r\n  background: none;\r\n  border: 0;\r\n  cursor: pointer;\r\n}\r\na {\r\n  text-decoration: none;\r\n}\r\ntable {\r\n  border-collapse: collapse;\r\n  border-spacing: 0;\r\n}\r\n\r\n#canvas {\r\n  border: 3px solid black;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n}\r\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT,UAAU;EACV,aAAa;EACb,cAAc;AAChB;AACA;;;EAGE,sBAAsB;EACtB,cAAc;AAChB;AACA;EACE,wCAAwC;EACxC,8BAA8B;EAC9B,sBAAsB;EACtB,eAAe;EACf,gBAAgB;EAChB,yBAAyB;EACzB,sBAAsB;EACtB,WAAW;AACb;AACA;;EAEE,YAAY;AACd;AACA;;;;;EAKE,cAAc;EACd,eAAe;AACjB;AACA;EACE,gBAAgB;EAChB,SAAS;EACT,eAAe;AACjB;AACA;EACE,qBAAqB;AACvB;AACA;EACE,yBAAyB;EACzB,iBAAiB;AACnB;;AAEA;EACE,uBAAuB;EACvB,kBAAkB;EAClB,QAAQ;EACR,SAAS;EACT,gCAAgC;AAClC",sourcesContent:["* {\r\n  margin: 0;\r\n  padding: 0;\r\n  font: inherit;\r\n  color: inherit;\r\n}\r\n*,\r\n:after,\r\n:before {\r\n  box-sizing: border-box;\r\n  flex-shrink: 0;\r\n}\r\n:root {\r\n  -webkit-tap-highlight-color: transparent;\r\n  -webkit-text-size-adjust: 100%;\r\n  text-size-adjust: 100%;\r\n  cursor: default;\r\n  line-height: 1.5;\r\n  overflow-wrap: break-word;\r\n  word-break: break-word;\r\n  tab-size: 4;\r\n}\r\nhtml,\r\nbody {\r\n  height: 100%;\r\n}\r\nimg,\r\npicture,\r\nvideo,\r\ncanvas,\r\nsvg {\r\n  display: block;\r\n  max-width: 100%;\r\n}\r\nbutton {\r\n  background: none;\r\n  border: 0;\r\n  cursor: pointer;\r\n}\r\na {\r\n  text-decoration: none;\r\n}\r\ntable {\r\n  border-collapse: collapse;\r\n  border-spacing: 0;\r\n}\r\n\r\n#canvas {\r\n  border: 3px solid black;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n}\r\n"],sourceRoot:""}]);const a=o},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var i="",r=void 0!==e[5];return e[4]&&(i+="@supports (".concat(e[4],") {")),e[2]&&(i+="@media ".concat(e[2]," {")),r&&(i+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),i+=t(e),r&&(i+="}"),e[2]&&(i+="}"),e[4]&&(i+="}"),i})).join("")},e.i=function(t,i,r,n,s){"string"==typeof t&&(t=[[null,t,void 0]]);var o={};if(r)for(var a=0;a<this.length;a++){var h=this[a][0];null!=h&&(o[h]=!0)}for(var c=0;c<t.length;c++){var l=[].concat(t[c]);r&&o[l[0]]||(void 0!==s&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=s),i&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=i):l[2]=i),n&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=n):l[4]="".concat(n)),e.push(l))}},e}},537:t=>{t.exports=function(t){var e=t[1],i=t[3];if(!i)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(i)))),n="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),s="/*# ".concat(n," */"),o=i.sources.map((function(t){return"/*# sourceURL=".concat(i.sourceRoot||"").concat(t," */")}));return[e].concat(o).concat([s]).join("\n")}return[e].join("\n")}},379:t=>{var e=[];function i(t){for(var i=-1,r=0;r<e.length;r++)if(e[r].identifier===t){i=r;break}return i}function r(t,r){for(var s={},o=[],a=0;a<t.length;a++){var h=t[a],c=r.base?h[0]+r.base:h[0],l=s[c]||0,d="".concat(c," ").concat(l);s[c]=l+1;var u=i(d),p={css:h[1],media:h[2],sourceMap:h[3],supports:h[4],layer:h[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var f=n(p,r);r.byIndex=a,e.splice(a,0,{identifier:d,updater:f,references:1})}o.push(d)}return o}function n(t,e){var i=e.domAPI(e);return i.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;i.update(t=e)}else i.remove()}}t.exports=function(t,n){var s=r(t=t||[],n=n||{});return function(t){t=t||[];for(var o=0;o<s.length;o++){var a=i(s[o]);e[a].references--}for(var h=r(t,n),c=0;c<s.length;c++){var l=i(s[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}s=h}}},569:t=>{var e={};t.exports=function(t,i){var r=function(t){if(void 0===e[t]){var i=document.querySelector(t);if(window.HTMLIFrameElement&&i instanceof window.HTMLIFrameElement)try{i=i.contentDocument.head}catch(t){i=null}e[t]=i}return e[t]}(t);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(i)}},216:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,i)=>{t.exports=function(t){var e=i.nc;e&&t.setAttribute("nonce",e)}},795:t=>{t.exports=function(t){var e=t.insertStyleElement(t);return{update:function(i){!function(t,e,i){var r="";i.supports&&(r+="@supports (".concat(i.supports,") {")),i.media&&(r+="@media ".concat(i.media," {"));var n=void 0!==i.layer;n&&(r+="@layer".concat(i.layer.length>0?" ".concat(i.layer):""," {")),r+=i.css,n&&(r+="}"),i.media&&(r+="}"),i.supports&&(r+="}");var s=i.sourceMap;s&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(s))))," */")),e.styleTagTransform(r,t,e.options)}(e,t,i)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}},e={};function i(r){var n=e[r];if(void 0!==n)return n.exports;var s=e[r]={id:r,exports:{}};return t[r](s,s.exports,i),s.exports}i.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return i.d(e,{a:e}),e},i.d=(t,e)=>{for(var r in e)i.o(e,r)&&!i.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},i.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),i.nc=void 0,(()=>{var t=i(379),e=i.n(t),r=i(795),n=i.n(r),s=i(569),o=i.n(s),a=i(565),h=i.n(a),c=i(216),l=i.n(c),d=i(589),u=i.n(d),p=i(426),f={};f.styleTagTransform=u(),f.setAttributes=h(),f.insert=o().bind(null,"head"),f.domAPI=n(),f.insertStyleElement=l(),e()(p.Z,f),p.Z&&p.Z.locals&&p.Z.locals;var A=function(){var t=this;this.keys=[],window.addEventListener("keydown",(function(e){switch(e.code){case"Enter":case"ArrowLeft":case"KeyA":case"ArrowRight":case"KeyD":case"ArrowUp":case"KeyW":case"ArrowDown":case"KeyS":case"Space":case"Escape":-1===t.keys.indexOf(e.code)&&t.keys.push(e.code)}})),window.addEventListener("keyup",(function(e){switch(e.code){case"Enter":case"ArrowLeft":case"KeyA":case"ArrowRight":case"KeyD":case"ArrowUp":case"KeyW":case"ArrowDown":case"KeyS":case"Space":case"Escape":t.keys.splice(t.keys.indexOf(e.code),1)}}))};const y=function(){function t(t){this.game=t,this.width=50,this.height=50,this.x=(this.game.width-50)/2,this.y=this.game.height-200,this.vx=0,this.vy=0,this.moveSpeed=10,this.HP=3}return t.prototype.update=function(t){this.x+=this.vx,t.includes("ArrowLeft")||t.includes("KeyA")?this.vx=-this.moveSpeed:t.includes("ArrowRight")||t.includes("KeyD")?this.vx=this.moveSpeed:this.vx=0,this.x<0&&(this.x=0),this.x>this.game.width-this.width&&(this.x=this.game.width-this.width),this.y+=this.vy,t.includes("ArrowUp")||t.includes("KeyW")?this.vy=-this.moveSpeed:t.includes("ArrowDown")||t.includes("KeyS")?this.vy=this.moveSpeed:this.vy=0,this.y<this.game.height/2-this.height&&(this.y=this.game.height/2-this.height),this.y>this.game.height-this.height&&(this.y=this.game.height-this.height)},t.prototype.draw=function(t){t.fillStyle="green",t.fillRect(this.x,this.y,this.width,this.height)},t.prototype.onBottom=function(){},t}(),m=function(){function t(t,e,i,r){this.game=t,this.width=50,this.height=50,this.x=Math.random()*(t.width/e-this.width)+i*(t.width/e),this.y=0,this.speed=0,this.fallSpeed=1+r/1e4,this.overScreen=!1,this.HP=Math.ceil(r/3e3),this.color="black"}return t.prototype.update=function(){this.x+=this.speed,this.y+=this.fallSpeed,9===this.HP&&(this.color="rgb(0,0,0)"),8===this.HP&&(this.color="rgb(85,0,0)"),7===this.HP&&(this.color="rgb(170,0,0)"),6===this.HP&&(this.color="rgb(255,0,0)"),5===this.HP&&(this.color="rgb(255,0,85)"),4===this.HP&&(this.color="rgb(255,0,170)"),3===this.HP&&(this.color="rgb(255,0,255)"),2===this.HP&&(this.color="rgb(255,85,255)"),1===this.HP&&(this.color="rgb(255,170,255)"),this.y>this.game.height&&(this.overScreen=!0)},t.prototype.draw=function(t){t.fillStyle=this.color,t.fillRect(this.x,this.y,this.width,this.height)},t}();var v=function(){function t(t,e,i){this.width=10,this.height=30,this.x=t.x+(t.width-this.width)/(e+1)*(i+1),this.y=t.y,this.speed=10,this.overScreen=!1}return t.prototype.update=function(){this.y-=this.speed,this.y<0&&(this.overScreen=!0)},t.prototype.draw=function(t){t.fillStyle="rgb(0,255,0)",t.fillRect(this.x,this.y,this.width,this.height)},t}();const g=v,b=function(){function t(t,e){this.width=50,this.height=50,this.x=Math.random()*(t.width-this.width),this.y=0,this.speed=10,this.overScreen=!1,this.type=e,this.color={beamSpeed:"blue",beamCount:"gold",skill:"skyblue"}[this.type]}return t.prototype.update=function(){this.y+=this.speed,this.y<0&&(this.overScreen=!0)},t.prototype.draw=function(t){t.fillStyle=this.color,t.fillRect(this.x,this.y,this.width,this.height)},t}();var w=function(){function t(t,e){this.game=t,this.player=e,this.fontSize=30,this.fontFamily="Helvetica",this.fontColor="black"}return t.prototype.draw=function(t){t.fillStyle=this.fontColor,t.font="".concat(this.fontSize,"px ").concat(this.fontFamily),t.textAlign="left",t.fillText("Score: ".concat(this.game.score),20,50),t.textAlign="right",t.fillText("HP: ".concat(this.player.HP),this.game.width-20,50),t.textAlign="left",t.font="30px serif",t.fillText("".concat(1===this.game.skill?"●":"○"),20,90),this.game.gameOver&&(this.fontColor="green",t.textAlign="center",t.fillText("Game Over",this.game.width/2,this.game.height/2))},t}();const x=w;window.addEventListener("load",(function(){var t=document.getElementById("canvas"),e=t.getContext("2d");t.width=600,t.height=900;var i=function(){function t(t,e){this.width=t,this.height=e,this.input=new A,this.player=new y(this),this.UI=new x(this,this.player),this.blocks=[],this.beams=[],this.items=[],this.timer=0,this.score=0,this.blockInterval=90,this.beamInterval=50,this.difficulty=1,this.beamCount=1,this.skill=1,this.gameOver=!1}return t.prototype.update=function(t){var e=this;this.timer++,this.player.update(this.input.keys),this.timer%1500==0&&(this.difficulty++,this.blockInterval--);for(var i=0;i<this.difficulty;i++)(this.timer+Math.round(this.blockInterval/this.difficulty)*i)%this.blockInterval==0&&this.addBlock(i);this.blocks.forEach((function(i,r,s){n(e.player,i)&&(1===e.player.HP&&(cancelAnimationFrame(t),e.gameOver=!0),e.player.HP--,s.splice(r,1)),e.beams.forEach((function(t,o,a){n(i,t)&&(i.HP--,a.splice(o,1),i.HP<=0&&(s.splice(r,1),e.score++))})),i.update(),i.overScreen&&s.splice(r,1)})),this.timer%this.beamInterval==0&&this.addBeam(),this.beams.forEach((function(t,e,i){t.update(),t.overScreen&&i.splice(e,1)})),this.timer%1500==0&&this.addItem("beamSpeed"),this.timer%4e3==0&&this.addItem("beamCount"),this.timer%100==0&&this.addItem("skill"),this.items.forEach((function(t,i,r){if(t.update(),n(e.player,t))switch(r.splice(i,1),t.type){case"beamSpeed":e.beamInterval>20?e.beamInterval-=10:e.beamInterval>10?e.beamInterval-=2:e.beamInterval>1&&(e.beamInterval-=1);break;case"beamCount":e.beamCount<10&&e.beamCount++;break;case"skill":e.skill=1}t.overScreen&&r.splice(i,1)})),this.input.keys.includes("Space")&&0!==this.skill&&this.uesSkill()},t.prototype.draw=function(t){this.player.draw(t),this.blocks.forEach((function(e){e.draw(t)})),this.beams.forEach((function(e){e.draw(t)})),this.items.forEach((function(e){e.draw(t)})),this.UI.draw(t)},t.prototype.addBlock=function(t){this.blocks.push(new m(this,this.difficulty,t,this.timer))},t.prototype.addBeam=function(){for(var t=0;t<this.beamCount;t++)this.beams.push(new g(this.player,this.beamCount,t))},t.prototype.addItem=function(t){this.items.push(new b(this,t))},t.prototype.uesSkill=function(){this.blocks.splice(0),this.skill--},t}(),r=new i(t.width,t.height);function n(t,e){var i=Math.abs(t.x-e.x)<t.width&&Math.abs(t.x+t.width-(e.x+e.width))<t.width,r=Math.abs(t.y-e.y)<=t.height&&Math.abs(t.y+t.height-(e.y+e.height))<=t.height;return i&&r}!function i(){var n=requestAnimationFrame(i);e.clearRect(0,0,t.width,t.height),r.update(n),r.draw(e)}()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,